import { myHeaders } from "./header.min.js"; import { cell as t, typeObjects as o, arrayObjects as n, paintObject as i } from "./objects.min.js"; import { reDrawGame as d } from "./reDrawGame.min.js"; function r(e, r) { let s = n.getRowArray; n.setChangedArray = []; let a = n.getChangedArray; if (o.getDrawable) { const o = e.getBoundingClientRect(), c = r.clientX - o.left, g = r.clientY - o.top; let m = Math.floor(c / t.getRectSize) * t.getRectSize, l = Math.floor(g / t.getRectSize) * t.getRectSize, u = m / t.getRectSize, p = l / t.getRectSize; "mousedown" === r.type && 1 === r.buttons ? (i.setAddPaint = !0, i.setLocked = !0) : "mousedown" === r.type && 2 === r.buttons && (i.setAddPaint = !1, i.setLocked = !0), (i.getAddPaint && i.getLocked && 0 === s[p][u] || !i.getAddPaint && i.getLocked && 1 === s[p][u]) && a.push([p, u]), n.setChangedArray = a, d() } } function s(e) { "mouseup" !== e.type && "mouseleave" !== e.type || (i.setLocked = !1) } export { r as paintLevel, s as stopPainting };